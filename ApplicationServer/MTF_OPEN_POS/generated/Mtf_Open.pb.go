// protoc --proto_path=internal --go_out=generated --go-grpc_out=generated internal/positions/Mtf_Open.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: positions/Mtf_Open.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PositionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EpbClmMtchAccnt string `protobuf:"bytes,1,opt,name=epb_clm_mtch_accnt,json=epbClmMtchAccnt,proto3" json:"epb_clm_mtch_accnt,omitempty"`
}

func (x *PositionRequest) Reset() {
	*x = PositionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_positions_Mtf_Open_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PositionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionRequest) ProtoMessage() {}

func (x *PositionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_positions_Mtf_Open_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionRequest.ProtoReflect.Descriptor instead.
func (*PositionRequest) Descriptor() ([]byte, []int) {
	return file_positions_Mtf_Open_proto_rawDescGZIP(), []int{0}
}

func (x *PositionRequest) GetEpbClmMtchAccnt() string {
	if x != nil {
		return x.EpbClmMtchAccnt
	}
	return ""
}

type EquityPosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EpbClmMtchAccnt      string  `protobuf:"bytes,1,opt,name=epb_clm_mtch_accnt,json=epbClmMtchAccnt,proto3" json:"epb_clm_mtch_accnt,omitempty"`
	EpbXchngCd           string  `protobuf:"bytes,2,opt,name=epb_xchng_cd,json=epbXchngCd,proto3" json:"epb_xchng_cd,omitempty"`
	EpbXchngSgmntCd      string  `protobuf:"bytes,3,opt,name=epb_xchng_sgmnt_cd,json=epbXchngSgmntCd,proto3" json:"epb_xchng_sgmnt_cd,omitempty"`
	EpbXchngSgmntSttlmnt int32   `protobuf:"varint,4,opt,name=epb_xchng_sgmnt_sttlmnt,json=epbXchngSgmntSttlmnt,proto3" json:"epb_xchng_sgmnt_sttlmnt,omitempty"`
	EpbStckCd            string  `protobuf:"bytes,5,opt,name=epb_stck_cd,json=epbStckCd,proto3" json:"epb_stck_cd,omitempty"`
	EpbOrgnlPstnQty      int32   `protobuf:"varint,6,opt,name=epb_orgnl_pstn_qty,json=epbOrgnlPstnQty,proto3" json:"epb_orgnl_pstn_qty,omitempty"`
	EpbRate              float64 `protobuf:"fixed64,7,opt,name=epb_rate,json=epbRate,proto3" json:"epb_rate,omitempty"`
	EpbOrgnlAmtPayble    float64 `protobuf:"fixed64,8,opt,name=epb_orgnl_amt_payble,json=epbOrgnlAmtPayble,proto3" json:"epb_orgnl_amt_payble,omitempty"`
	EpbOrgnlMrgnAmt      float64 `protobuf:"fixed64,9,opt,name=epb_orgnl_mrgn_amt,json=epbOrgnlMrgnAmt,proto3" json:"epb_orgnl_mrgn_amt,omitempty"`
	EpbSellQty           int32   `protobuf:"varint,10,opt,name=epb_sell_qty,json=epbSellQty,proto3" json:"epb_sell_qty,omitempty"`
	EpbCvrOrdQty         int32   `protobuf:"varint,11,opt,name=epb_cvr_ord_qty,json=epbCvrOrdQty,proto3" json:"epb_cvr_ord_qty,omitempty"`
	EpbNetMrgnAmt        float64 `protobuf:"fixed64,12,opt,name=epb_net_mrgn_amt,json=epbNetMrgnAmt,proto3" json:"epb_net_mrgn_amt,omitempty"`
	EpbNetAmtPayble      float64 `protobuf:"fixed64,13,opt,name=epb_net_amt_payble,json=epbNetAmtPayble,proto3" json:"epb_net_amt_payble,omitempty"`
	EpbNetPstnQty        int32   `protobuf:"varint,14,opt,name=epb_net_pstn_qty,json=epbNetPstnQty,proto3" json:"epb_net_pstn_qty,omitempty"`
	EpbCtdQty            int32   `protobuf:"varint,15,opt,name=epb_ctd_qty,json=epbCtdQty,proto3" json:"epb_ctd_qty,omitempty"`
	EpbPstnStts          string  `protobuf:"bytes,16,opt,name=epb_pstn_stts,json=epbPstnStts,proto3" json:"epb_pstn_stts,omitempty"`
	EpbLpcCalcStts       string  `protobuf:"bytes,17,opt,name=epb_lpc_calc_stts,json=epbLpcCalcStts,proto3" json:"epb_lpc_calc_stts,omitempty"`
	EpbSqroffMode        string  `protobuf:"bytes,18,opt,name=epb_sqroff_mode,json=epbSqroffMode,proto3" json:"epb_sqroff_mode,omitempty"`
	EpbPstnTrdDt         string  `protobuf:"bytes,19,opt,name=epb_pstn_trd_dt,json=epbPstnTrdDt,proto3" json:"epb_pstn_trd_dt,omitempty"`
	EpbMtmPrcsFlg        string  `protobuf:"bytes,20,opt,name=epb_mtm_prcs_flg,json=epbMtmPrcsFlg,proto3" json:"epb_mtm_prcs_flg,omitempty"`
	EpbLastMdfcnDt       string  `protobuf:"bytes,21,opt,name=epb_last_mdfcn_dt,json=epbLastMdfcnDt,proto3" json:"epb_last_mdfcn_dt,omitempty"`
	EpbInsDate           string  `protobuf:"bytes,22,opt,name=epb_ins_date,json=epbInsDate,proto3" json:"epb_ins_date,omitempty"`
	EpbCloseDate         string  `protobuf:"bytes,23,opt,name=epb_close_date,json=epbCloseDate,proto3" json:"epb_close_date,omitempty"`
	EpbSysFailFlg        string  `protobuf:"bytes,24,opt,name=epb_sys_fail_flg,json=epbSysFailFlg,proto3" json:"epb_sys_fail_flg,omitempty"`
	EpbLastPymntDt       string  `protobuf:"bytes,25,opt,name=epb_last_pymnt_dt,json=epbLastPymntDt,proto3" json:"epb_last_pymnt_dt,omitempty"`
	EpbLpcCalcEndDt      string  `protobuf:"bytes,26,opt,name=epb_lpc_calc_end_dt,json=epbLpcCalcEndDt,proto3" json:"epb_lpc_calc_end_dt,omitempty"`
	EpbMtmCansq          string  `protobuf:"bytes,27,opt,name=epb_mtm_cansq,json=epbMtmCansq,proto3" json:"epb_mtm_cansq,omitempty"`
	EpbExpiryDt          string  `protobuf:"bytes,28,opt,name=epb_expiry_dt,json=epbExpiryDt,proto3" json:"epb_expiry_dt,omitempty"`
	EpbMinMrgn           float64 `protobuf:"fixed64,29,opt,name=epb_min_mrgn,json=epbMinMrgn,proto3" json:"epb_min_mrgn,omitempty"`
	EpbMrgnDbcrPrcsFlg   string  `protobuf:"bytes,30,opt,name=epb_mrgn_dbcr_prcs_flg,json=epbMrgnDbcrPrcsFlg,proto3" json:"epb_mrgn_dbcr_prcs_flg,omitempty"`
	EpbDpId              string  `protobuf:"bytes,31,opt,name=epb_dp_id,json=epbDpId,proto3" json:"epb_dp_id,omitempty"`
	EpbDpClntId          string  `protobuf:"bytes,32,opt,name=epb_dp_clnt_id,json=epbDpClntId,proto3" json:"epb_dp_clnt_id,omitempty"`
	EpbPledgeStts        string  `protobuf:"bytes,33,opt,name=epb_pledge_stts,json=epbPledgeStts,proto3" json:"epb_pledge_stts,omitempty"`
	EpbBtstNetMrgnAmt    float64 `protobuf:"fixed64,34,opt,name=epb_btst_net_mrgn_amt,json=epbBtstNetMrgnAmt,proto3" json:"epb_btst_net_mrgn_amt,omitempty"`
	EpbBtstMrgnBlckd     float64 `protobuf:"fixed64,35,opt,name=epb_btst_mrgn_blckd,json=epbBtstMrgnBlckd,proto3" json:"epb_btst_mrgn_blckd,omitempty"`
	EpbBtstMrgnDbcrFlg   string  `protobuf:"bytes,36,opt,name=epb_btst_mrgn_dbcr_flg,json=epbBtstMrgnDbcrFlg,proto3" json:"epb_btst_mrgn_dbcr_flg,omitempty"`
	EpbBtstSgmntCd       string  `protobuf:"bytes,37,opt,name=epb_btst_sgmnt_cd,json=epbBtstSgmntCd,proto3" json:"epb_btst_sgmnt_cd,omitempty"`
	EpbBtstStlmnt        int32   `protobuf:"varint,38,opt,name=epb_btst_stlmnt,json=epbBtstStlmnt,proto3" json:"epb_btst_stlmnt,omitempty"`
	EpbBtstCshBlckd      float64 `protobuf:"fixed64,39,opt,name=epb_btst_csh_blckd,json=epbBtstCshBlckd,proto3" json:"epb_btst_csh_blckd,omitempty"`
	EpbBtstSamBlckd      float64 `protobuf:"fixed64,40,opt,name=epb_btst_sam_blckd,json=epbBtstSamBlckd,proto3" json:"epb_btst_sam_blckd,omitempty"`
	EpbBtstCalcDt        string  `protobuf:"bytes,41,opt,name=epb_btst_calc_dt,json=epbBtstCalcDt,proto3" json:"epb_btst_calc_dt,omitempty"`
	EpbDbcrCalcDt        string  `protobuf:"bytes,42,opt,name=epb_dbcr_calc_dt,json=epbDbcrCalcDt,proto3" json:"epb_dbcr_calc_dt,omitempty"`
	EpbNsdlRefNo         string  `protobuf:"bytes,43,opt,name=epb_nsdl_ref_no,json=epbNsdlRefNo,proto3" json:"epb_nsdl_ref_no,omitempty"`
	EpbMrgnWithheldFlg   string  `protobuf:"bytes,44,opt,name=epb_mrgn_withheld_flg,json=epbMrgnWithheldFlg,proto3" json:"epb_mrgn_withheld_flg,omitempty"`
}

func (x *EquityPosition) Reset() {
	*x = EquityPosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_positions_Mtf_Open_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EquityPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquityPosition) ProtoMessage() {}

func (x *EquityPosition) ProtoReflect() protoreflect.Message {
	mi := &file_positions_Mtf_Open_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquityPosition.ProtoReflect.Descriptor instead.
func (*EquityPosition) Descriptor() ([]byte, []int) {
	return file_positions_Mtf_Open_proto_rawDescGZIP(), []int{1}
}

func (x *EquityPosition) GetEpbClmMtchAccnt() string {
	if x != nil {
		return x.EpbClmMtchAccnt
	}
	return ""
}

func (x *EquityPosition) GetEpbXchngCd() string {
	if x != nil {
		return x.EpbXchngCd
	}
	return ""
}

func (x *EquityPosition) GetEpbXchngSgmntCd() string {
	if x != nil {
		return x.EpbXchngSgmntCd
	}
	return ""
}

func (x *EquityPosition) GetEpbXchngSgmntSttlmnt() int32 {
	if x != nil {
		return x.EpbXchngSgmntSttlmnt
	}
	return 0
}

func (x *EquityPosition) GetEpbStckCd() string {
	if x != nil {
		return x.EpbStckCd
	}
	return ""
}

func (x *EquityPosition) GetEpbOrgnlPstnQty() int32 {
	if x != nil {
		return x.EpbOrgnlPstnQty
	}
	return 0
}

func (x *EquityPosition) GetEpbRate() float64 {
	if x != nil {
		return x.EpbRate
	}
	return 0
}

func (x *EquityPosition) GetEpbOrgnlAmtPayble() float64 {
	if x != nil {
		return x.EpbOrgnlAmtPayble
	}
	return 0
}

func (x *EquityPosition) GetEpbOrgnlMrgnAmt() float64 {
	if x != nil {
		return x.EpbOrgnlMrgnAmt
	}
	return 0
}

func (x *EquityPosition) GetEpbSellQty() int32 {
	if x != nil {
		return x.EpbSellQty
	}
	return 0
}

func (x *EquityPosition) GetEpbCvrOrdQty() int32 {
	if x != nil {
		return x.EpbCvrOrdQty
	}
	return 0
}

func (x *EquityPosition) GetEpbNetMrgnAmt() float64 {
	if x != nil {
		return x.EpbNetMrgnAmt
	}
	return 0
}

func (x *EquityPosition) GetEpbNetAmtPayble() float64 {
	if x != nil {
		return x.EpbNetAmtPayble
	}
	return 0
}

func (x *EquityPosition) GetEpbNetPstnQty() int32 {
	if x != nil {
		return x.EpbNetPstnQty
	}
	return 0
}

func (x *EquityPosition) GetEpbCtdQty() int32 {
	if x != nil {
		return x.EpbCtdQty
	}
	return 0
}

func (x *EquityPosition) GetEpbPstnStts() string {
	if x != nil {
		return x.EpbPstnStts
	}
	return ""
}

func (x *EquityPosition) GetEpbLpcCalcStts() string {
	if x != nil {
		return x.EpbLpcCalcStts
	}
	return ""
}

func (x *EquityPosition) GetEpbSqroffMode() string {
	if x != nil {
		return x.EpbSqroffMode
	}
	return ""
}

func (x *EquityPosition) GetEpbPstnTrdDt() string {
	if x != nil {
		return x.EpbPstnTrdDt
	}
	return ""
}

func (x *EquityPosition) GetEpbMtmPrcsFlg() string {
	if x != nil {
		return x.EpbMtmPrcsFlg
	}
	return ""
}

func (x *EquityPosition) GetEpbLastMdfcnDt() string {
	if x != nil {
		return x.EpbLastMdfcnDt
	}
	return ""
}

func (x *EquityPosition) GetEpbInsDate() string {
	if x != nil {
		return x.EpbInsDate
	}
	return ""
}

func (x *EquityPosition) GetEpbCloseDate() string {
	if x != nil {
		return x.EpbCloseDate
	}
	return ""
}

func (x *EquityPosition) GetEpbSysFailFlg() string {
	if x != nil {
		return x.EpbSysFailFlg
	}
	return ""
}

func (x *EquityPosition) GetEpbLastPymntDt() string {
	if x != nil {
		return x.EpbLastPymntDt
	}
	return ""
}

func (x *EquityPosition) GetEpbLpcCalcEndDt() string {
	if x != nil {
		return x.EpbLpcCalcEndDt
	}
	return ""
}

func (x *EquityPosition) GetEpbMtmCansq() string {
	if x != nil {
		return x.EpbMtmCansq
	}
	return ""
}

func (x *EquityPosition) GetEpbExpiryDt() string {
	if x != nil {
		return x.EpbExpiryDt
	}
	return ""
}

func (x *EquityPosition) GetEpbMinMrgn() float64 {
	if x != nil {
		return x.EpbMinMrgn
	}
	return 0
}

func (x *EquityPosition) GetEpbMrgnDbcrPrcsFlg() string {
	if x != nil {
		return x.EpbMrgnDbcrPrcsFlg
	}
	return ""
}

func (x *EquityPosition) GetEpbDpId() string {
	if x != nil {
		return x.EpbDpId
	}
	return ""
}

func (x *EquityPosition) GetEpbDpClntId() string {
	if x != nil {
		return x.EpbDpClntId
	}
	return ""
}

func (x *EquityPosition) GetEpbPledgeStts() string {
	if x != nil {
		return x.EpbPledgeStts
	}
	return ""
}

func (x *EquityPosition) GetEpbBtstNetMrgnAmt() float64 {
	if x != nil {
		return x.EpbBtstNetMrgnAmt
	}
	return 0
}

func (x *EquityPosition) GetEpbBtstMrgnBlckd() float64 {
	if x != nil {
		return x.EpbBtstMrgnBlckd
	}
	return 0
}

func (x *EquityPosition) GetEpbBtstMrgnDbcrFlg() string {
	if x != nil {
		return x.EpbBtstMrgnDbcrFlg
	}
	return ""
}

func (x *EquityPosition) GetEpbBtstSgmntCd() string {
	if x != nil {
		return x.EpbBtstSgmntCd
	}
	return ""
}

func (x *EquityPosition) GetEpbBtstStlmnt() int32 {
	if x != nil {
		return x.EpbBtstStlmnt
	}
	return 0
}

func (x *EquityPosition) GetEpbBtstCshBlckd() float64 {
	if x != nil {
		return x.EpbBtstCshBlckd
	}
	return 0
}

func (x *EquityPosition) GetEpbBtstSamBlckd() float64 {
	if x != nil {
		return x.EpbBtstSamBlckd
	}
	return 0
}

func (x *EquityPosition) GetEpbBtstCalcDt() string {
	if x != nil {
		return x.EpbBtstCalcDt
	}
	return ""
}

func (x *EquityPosition) GetEpbDbcrCalcDt() string {
	if x != nil {
		return x.EpbDbcrCalcDt
	}
	return ""
}

func (x *EquityPosition) GetEpbNsdlRefNo() string {
	if x != nil {
		return x.EpbNsdlRefNo
	}
	return ""
}

func (x *EquityPosition) GetEpbMrgnWithheldFlg() string {
	if x != nil {
		return x.EpbMrgnWithheldFlg
	}
	return ""
}

type PositionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Equity []*EquityPosition `protobuf:"bytes,1,rep,name=equity,proto3" json:"equity,omitempty"`
}

func (x *PositionResponse) Reset() {
	*x = PositionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_positions_Mtf_Open_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PositionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionResponse) ProtoMessage() {}

func (x *PositionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_positions_Mtf_Open_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionResponse.ProtoReflect.Descriptor instead.
func (*PositionResponse) Descriptor() ([]byte, []int) {
	return file_positions_Mtf_Open_proto_rawDescGZIP(), []int{2}
}

func (x *PositionResponse) GetEquity() []*EquityPosition {
	if x != nil {
		return x.Equity
	}
	return nil
}

var File_positions_Mtf_Open_proto protoreflect.FileDescriptor

var file_positions_Mtf_Open_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x4d, 0x74, 0x66, 0x5f,
	0x4f, 0x70, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x3e, 0x0a, 0x0f, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b,
	0x0a, 0x12, 0x65, 0x70, 0x62, 0x5f, 0x63, 0x6c, 0x6d, 0x5f, 0x6d, 0x74, 0x63, 0x68, 0x5f, 0x61,
	0x63, 0x63, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x70, 0x62, 0x43,
	0x6c, 0x6d, 0x4d, 0x74, 0x63, 0x68, 0x41, 0x63, 0x63, 0x6e, 0x74, 0x22, 0xa2, 0x0e, 0x0a, 0x0e,
	0x45, 0x71, 0x75, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b,
	0x0a, 0x12, 0x65, 0x70, 0x62, 0x5f, 0x63, 0x6c, 0x6d, 0x5f, 0x6d, 0x74, 0x63, 0x68, 0x5f, 0x61,
	0x63, 0x63, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x70, 0x62, 0x43,
	0x6c, 0x6d, 0x4d, 0x74, 0x63, 0x68, 0x41, 0x63, 0x63, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x65,
	0x70, 0x62, 0x5f, 0x78, 0x63, 0x68, 0x6e, 0x67, 0x5f, 0x63, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x65, 0x70, 0x62, 0x58, 0x63, 0x68, 0x6e, 0x67, 0x43, 0x64, 0x12, 0x2b, 0x0a,
	0x12, 0x65, 0x70, 0x62, 0x5f, 0x78, 0x63, 0x68, 0x6e, 0x67, 0x5f, 0x73, 0x67, 0x6d, 0x6e, 0x74,
	0x5f, 0x63, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x70, 0x62, 0x58, 0x63,
	0x68, 0x6e, 0x67, 0x53, 0x67, 0x6d, 0x6e, 0x74, 0x43, 0x64, 0x12, 0x35, 0x0a, 0x17, 0x65, 0x70,
	0x62, 0x5f, 0x78, 0x63, 0x68, 0x6e, 0x67, 0x5f, 0x73, 0x67, 0x6d, 0x6e, 0x74, 0x5f, 0x73, 0x74,
	0x74, 0x6c, 0x6d, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x65, 0x70, 0x62,
	0x58, 0x63, 0x68, 0x6e, 0x67, 0x53, 0x67, 0x6d, 0x6e, 0x74, 0x53, 0x74, 0x74, 0x6c, 0x6d, 0x6e,
	0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x65, 0x70, 0x62, 0x5f, 0x73, 0x74, 0x63, 0x6b, 0x5f, 0x63, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x70, 0x62, 0x53, 0x74, 0x63, 0x6b, 0x43,
	0x64, 0x12, 0x2b, 0x0a, 0x12, 0x65, 0x70, 0x62, 0x5f, 0x6f, 0x72, 0x67, 0x6e, 0x6c, 0x5f, 0x70,
	0x73, 0x74, 0x6e, 0x5f, 0x71, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x65,
	0x70, 0x62, 0x4f, 0x72, 0x67, 0x6e, 0x6c, 0x50, 0x73, 0x74, 0x6e, 0x51, 0x74, 0x79, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x70, 0x62, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x07, 0x65, 0x70, 0x62, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2f, 0x0a, 0x14, 0x65, 0x70, 0x62,
	0x5f, 0x6f, 0x72, 0x67, 0x6e, 0x6c, 0x5f, 0x61, 0x6d, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x62, 0x6c,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x65, 0x70, 0x62, 0x4f, 0x72, 0x67, 0x6e,
	0x6c, 0x41, 0x6d, 0x74, 0x50, 0x61, 0x79, 0x62, 0x6c, 0x65, 0x12, 0x2b, 0x0a, 0x12, 0x65, 0x70,
	0x62, 0x5f, 0x6f, 0x72, 0x67, 0x6e, 0x6c, 0x5f, 0x6d, 0x72, 0x67, 0x6e, 0x5f, 0x61, 0x6d, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x65, 0x70, 0x62, 0x4f, 0x72, 0x67, 0x6e, 0x6c,
	0x4d, 0x72, 0x67, 0x6e, 0x41, 0x6d, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x65, 0x70, 0x62, 0x5f, 0x73,
	0x65, 0x6c, 0x6c, 0x5f, 0x71, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x65,
	0x70, 0x62, 0x53, 0x65, 0x6c, 0x6c, 0x51, 0x74, 0x79, 0x12, 0x25, 0x0a, 0x0f, 0x65, 0x70, 0x62,
	0x5f, 0x63, 0x76, 0x72, 0x5f, 0x6f, 0x72, 0x64, 0x5f, 0x71, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x65, 0x70, 0x62, 0x43, 0x76, 0x72, 0x4f, 0x72, 0x64, 0x51, 0x74, 0x79,
	0x12, 0x27, 0x0a, 0x10, 0x65, 0x70, 0x62, 0x5f, 0x6e, 0x65, 0x74, 0x5f, 0x6d, 0x72, 0x67, 0x6e,
	0x5f, 0x61, 0x6d, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x65, 0x70, 0x62, 0x4e,
	0x65, 0x74, 0x4d, 0x72, 0x67, 0x6e, 0x41, 0x6d, 0x74, 0x12, 0x2b, 0x0a, 0x12, 0x65, 0x70, 0x62,
	0x5f, 0x6e, 0x65, 0x74, 0x5f, 0x61, 0x6d, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x62, 0x6c, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x65, 0x70, 0x62, 0x4e, 0x65, 0x74, 0x41, 0x6d, 0x74,
	0x50, 0x61, 0x79, 0x62, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x10, 0x65, 0x70, 0x62, 0x5f, 0x6e, 0x65,
	0x74, 0x5f, 0x70, 0x73, 0x74, 0x6e, 0x5f, 0x71, 0x74, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x65, 0x70, 0x62, 0x4e, 0x65, 0x74, 0x50, 0x73, 0x74, 0x6e, 0x51, 0x74, 0x79, 0x12,
	0x1e, 0x0a, 0x0b, 0x65, 0x70, 0x62, 0x5f, 0x63, 0x74, 0x64, 0x5f, 0x71, 0x74, 0x79, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x70, 0x62, 0x43, 0x74, 0x64, 0x51, 0x74, 0x79, 0x12,
	0x22, 0x0a, 0x0d, 0x65, 0x70, 0x62, 0x5f, 0x70, 0x73, 0x74, 0x6e, 0x5f, 0x73, 0x74, 0x74, 0x73,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x70, 0x62, 0x50, 0x73, 0x74, 0x6e, 0x53,
	0x74, 0x74, 0x73, 0x12, 0x29, 0x0a, 0x11, 0x65, 0x70, 0x62, 0x5f, 0x6c, 0x70, 0x63, 0x5f, 0x63,
	0x61, 0x6c, 0x63, 0x5f, 0x73, 0x74, 0x74, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x65, 0x70, 0x62, 0x4c, 0x70, 0x63, 0x43, 0x61, 0x6c, 0x63, 0x53, 0x74, 0x74, 0x73, 0x12, 0x26,
	0x0a, 0x0f, 0x65, 0x70, 0x62, 0x5f, 0x73, 0x71, 0x72, 0x6f, 0x66, 0x66, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x70, 0x62, 0x53, 0x71, 0x72, 0x6f,
	0x66, 0x66, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0f, 0x65, 0x70, 0x62, 0x5f, 0x70, 0x73,
	0x74, 0x6e, 0x5f, 0x74, 0x72, 0x64, 0x5f, 0x64, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x70, 0x62, 0x50, 0x73, 0x74, 0x6e, 0x54, 0x72, 0x64, 0x44, 0x74, 0x12, 0x27, 0x0a,
	0x10, 0x65, 0x70, 0x62, 0x5f, 0x6d, 0x74, 0x6d, 0x5f, 0x70, 0x72, 0x63, 0x73, 0x5f, 0x66, 0x6c,
	0x67, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x70, 0x62, 0x4d, 0x74, 0x6d, 0x50,
	0x72, 0x63, 0x73, 0x46, 0x6c, 0x67, 0x12, 0x29, 0x0a, 0x11, 0x65, 0x70, 0x62, 0x5f, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x6d, 0x64, 0x66, 0x63, 0x6e, 0x5f, 0x64, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x65, 0x70, 0x62, 0x4c, 0x61, 0x73, 0x74, 0x4d, 0x64, 0x66, 0x63, 0x6e, 0x44,
	0x74, 0x12, 0x20, 0x0a, 0x0c, 0x65, 0x70, 0x62, 0x5f, 0x69, 0x6e, 0x73, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x70, 0x62, 0x49, 0x6e, 0x73, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x65, 0x70, 0x62, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x70, 0x62,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x10, 0x65, 0x70, 0x62,
	0x5f, 0x73, 0x79, 0x73, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x5f, 0x66, 0x6c, 0x67, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x70, 0x62, 0x53, 0x79, 0x73, 0x46, 0x61, 0x69, 0x6c, 0x46,
	0x6c, 0x67, 0x12, 0x29, 0x0a, 0x11, 0x65, 0x70, 0x62, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70,
	0x79, 0x6d, 0x6e, 0x74, 0x5f, 0x64, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65,
	0x70, 0x62, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x79, 0x6d, 0x6e, 0x74, 0x44, 0x74, 0x12, 0x2c, 0x0a,
	0x13, 0x65, 0x70, 0x62, 0x5f, 0x6c, 0x70, 0x63, 0x5f, 0x63, 0x61, 0x6c, 0x63, 0x5f, 0x65, 0x6e,
	0x64, 0x5f, 0x64, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x70, 0x62, 0x4c,
	0x70, 0x63, 0x43, 0x61, 0x6c, 0x63, 0x45, 0x6e, 0x64, 0x44, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x65,
	0x70, 0x62, 0x5f, 0x6d, 0x74, 0x6d, 0x5f, 0x63, 0x61, 0x6e, 0x73, 0x71, 0x18, 0x1b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x65, 0x70, 0x62, 0x4d, 0x74, 0x6d, 0x43, 0x61, 0x6e, 0x73, 0x71, 0x12,
	0x22, 0x0a, 0x0d, 0x65, 0x70, 0x62, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x64, 0x74,
	0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x70, 0x62, 0x45, 0x78, 0x70, 0x69, 0x72,
	0x79, 0x44, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x65, 0x70, 0x62, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x6d,
	0x72, 0x67, 0x6e, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x65, 0x70, 0x62, 0x4d, 0x69,
	0x6e, 0x4d, 0x72, 0x67, 0x6e, 0x12, 0x32, 0x0a, 0x16, 0x65, 0x70, 0x62, 0x5f, 0x6d, 0x72, 0x67,
	0x6e, 0x5f, 0x64, 0x62, 0x63, 0x72, 0x5f, 0x70, 0x72, 0x63, 0x73, 0x5f, 0x66, 0x6c, 0x67, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x65, 0x70, 0x62, 0x4d, 0x72, 0x67, 0x6e, 0x44, 0x62,
	0x63, 0x72, 0x50, 0x72, 0x63, 0x73, 0x46, 0x6c, 0x67, 0x12, 0x1a, 0x0a, 0x09, 0x65, 0x70, 0x62,
	0x5f, 0x64, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x70,
	0x62, 0x44, 0x70, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0e, 0x65, 0x70, 0x62, 0x5f, 0x64, 0x70, 0x5f,
	0x63, 0x6c, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65,
	0x70, 0x62, 0x44, 0x70, 0x43, 0x6c, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x70,
	0x62, 0x5f, 0x70, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x74, 0x73, 0x18, 0x21, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x70, 0x62, 0x50, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x53, 0x74,
	0x74, 0x73, 0x12, 0x30, 0x0a, 0x15, 0x65, 0x70, 0x62, 0x5f, 0x62, 0x74, 0x73, 0x74, 0x5f, 0x6e,
	0x65, 0x74, 0x5f, 0x6d, 0x72, 0x67, 0x6e, 0x5f, 0x61, 0x6d, 0x74, 0x18, 0x22, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x11, 0x65, 0x70, 0x62, 0x42, 0x74, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x4d, 0x72, 0x67,
	0x6e, 0x41, 0x6d, 0x74, 0x12, 0x2d, 0x0a, 0x13, 0x65, 0x70, 0x62, 0x5f, 0x62, 0x74, 0x73, 0x74,
	0x5f, 0x6d, 0x72, 0x67, 0x6e, 0x5f, 0x62, 0x6c, 0x63, 0x6b, 0x64, 0x18, 0x23, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x10, 0x65, 0x70, 0x62, 0x42, 0x74, 0x73, 0x74, 0x4d, 0x72, 0x67, 0x6e, 0x42, 0x6c,
	0x63, 0x6b, 0x64, 0x12, 0x32, 0x0a, 0x16, 0x65, 0x70, 0x62, 0x5f, 0x62, 0x74, 0x73, 0x74, 0x5f,
	0x6d, 0x72, 0x67, 0x6e, 0x5f, 0x64, 0x62, 0x63, 0x72, 0x5f, 0x66, 0x6c, 0x67, 0x18, 0x24, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x65, 0x70, 0x62, 0x42, 0x74, 0x73, 0x74, 0x4d, 0x72, 0x67, 0x6e,
	0x44, 0x62, 0x63, 0x72, 0x46, 0x6c, 0x67, 0x12, 0x29, 0x0a, 0x11, 0x65, 0x70, 0x62, 0x5f, 0x62,
	0x74, 0x73, 0x74, 0x5f, 0x73, 0x67, 0x6d, 0x6e, 0x74, 0x5f, 0x63, 0x64, 0x18, 0x25, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x65, 0x70, 0x62, 0x42, 0x74, 0x73, 0x74, 0x53, 0x67, 0x6d, 0x6e, 0x74,
	0x43, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x70, 0x62, 0x5f, 0x62, 0x74, 0x73, 0x74, 0x5f, 0x73,
	0x74, 0x6c, 0x6d, 0x6e, 0x74, 0x18, 0x26, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x65, 0x70, 0x62,
	0x42, 0x74, 0x73, 0x74, 0x53, 0x74, 0x6c, 0x6d, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x12, 0x65, 0x70,
	0x62, 0x5f, 0x62, 0x74, 0x73, 0x74, 0x5f, 0x63, 0x73, 0x68, 0x5f, 0x62, 0x6c, 0x63, 0x6b, 0x64,
	0x18, 0x27, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x65, 0x70, 0x62, 0x42, 0x74, 0x73, 0x74, 0x43,
	0x73, 0x68, 0x42, 0x6c, 0x63, 0x6b, 0x64, 0x12, 0x2b, 0x0a, 0x12, 0x65, 0x70, 0x62, 0x5f, 0x62,
	0x74, 0x73, 0x74, 0x5f, 0x73, 0x61, 0x6d, 0x5f, 0x62, 0x6c, 0x63, 0x6b, 0x64, 0x18, 0x28, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0f, 0x65, 0x70, 0x62, 0x42, 0x74, 0x73, 0x74, 0x53, 0x61, 0x6d, 0x42,
	0x6c, 0x63, 0x6b, 0x64, 0x12, 0x27, 0x0a, 0x10, 0x65, 0x70, 0x62, 0x5f, 0x62, 0x74, 0x73, 0x74,
	0x5f, 0x63, 0x61, 0x6c, 0x63, 0x5f, 0x64, 0x74, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x65, 0x70, 0x62, 0x42, 0x74, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x44, 0x74, 0x12, 0x27, 0x0a,
	0x10, 0x65, 0x70, 0x62, 0x5f, 0x64, 0x62, 0x63, 0x72, 0x5f, 0x63, 0x61, 0x6c, 0x63, 0x5f, 0x64,
	0x74, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x70, 0x62, 0x44, 0x62, 0x63, 0x72,
	0x43, 0x61, 0x6c, 0x63, 0x44, 0x74, 0x12, 0x25, 0x0a, 0x0f, 0x65, 0x70, 0x62, 0x5f, 0x6e, 0x73,
	0x64, 0x6c, 0x5f, 0x72, 0x65, 0x66, 0x5f, 0x6e, 0x6f, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x70, 0x62, 0x4e, 0x73, 0x64, 0x6c, 0x52, 0x65, 0x66, 0x4e, 0x6f, 0x12, 0x31, 0x0a,
	0x15, 0x65, 0x70, 0x62, 0x5f, 0x6d, 0x72, 0x67, 0x6e, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x68, 0x65,
	0x6c, 0x64, 0x5f, 0x66, 0x6c, 0x67, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x65, 0x70,
	0x62, 0x4d, 0x72, 0x67, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x68, 0x65, 0x6c, 0x64, 0x46, 0x6c, 0x67,
	0x22, 0x4b, 0x0a, 0x10, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x65, 0x71, 0x75, 0x69, 0x74, 0x79, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x71, 0x75, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x65, 0x71, 0x75, 0x69, 0x74, 0x79, 0x32, 0x6b, 0x0a,
	0x12, 0x4d, 0x74, 0x66, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x74, 0x66, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x03, 0x5a, 0x01, 0x2e, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_positions_Mtf_Open_proto_rawDescOnce sync.Once
	file_positions_Mtf_Open_proto_rawDescData = file_positions_Mtf_Open_proto_rawDesc
)

func file_positions_Mtf_Open_proto_rawDescGZIP() []byte {
	file_positions_Mtf_Open_proto_rawDescOnce.Do(func() {
		file_positions_Mtf_Open_proto_rawDescData = protoimpl.X.CompressGZIP(file_positions_Mtf_Open_proto_rawDescData)
	})
	return file_positions_Mtf_Open_proto_rawDescData
}

var file_positions_Mtf_Open_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_positions_Mtf_Open_proto_goTypes = []any{
	(*PositionRequest)(nil),  // 0: PositionService.PositionRequest
	(*EquityPosition)(nil),   // 1: PositionService.EquityPosition
	(*PositionResponse)(nil), // 2: PositionService.PositionResponse
}
var file_positions_Mtf_Open_proto_depIdxs = []int32{
	1, // 0: PositionService.PositionResponse.equity:type_name -> PositionService.EquityPosition
	0, // 1: PositionService.MtfPositionService.GetMtfPosition:input_type -> PositionService.PositionRequest
	2, // 2: PositionService.MtfPositionService.GetMtfPosition:output_type -> PositionService.PositionResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_positions_Mtf_Open_proto_init() }
func file_positions_Mtf_Open_proto_init() {
	if File_positions_Mtf_Open_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_positions_Mtf_Open_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*PositionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_positions_Mtf_Open_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*EquityPosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_positions_Mtf_Open_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*PositionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_positions_Mtf_Open_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_positions_Mtf_Open_proto_goTypes,
		DependencyIndexes: file_positions_Mtf_Open_proto_depIdxs,
		MessageInfos:      file_positions_Mtf_Open_proto_msgTypes,
	}.Build()
	File_positions_Mtf_Open_proto = out.File
	file_positions_Mtf_Open_proto_rawDesc = nil
	file_positions_Mtf_Open_proto_goTypes = nil
	file_positions_Mtf_Open_proto_depIdxs = nil
}
